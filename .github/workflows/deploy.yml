# ddock-terview-backend/.github/workflows/deploy.yml

# 워크플로우의 이름
name: Deploy Backend to Elastic Beanstalk

# 언제 이 워크플로우를 실행할지 정의
on:
  push:
    branches: [ "main" ]

# 실행될 작업들을 정의
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. GitHub 레포지토리의 소스 코드를 가상 환경으로 가져옴
      - name: Checkout Source Code
        uses: actions/checkout@v3

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. gradlew 파일에 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Gradle로 프로젝트를 빌드 (결과로 .jar 파일 생성)
      - name: Build with Gradle
        run: ./gradlew build

      # 5. AWS에 배포
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          # 1단계에서 등록한 Secret을 사용하여 AWS에 인증
          aws_access_key: AKIA2S2BHHBC3R4PL24P
          aws_secret_key: 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
          
          # 배포할 대상 애플리케이션 및 환경 정보
          application_name: ddock-terview-app # Elastic Beanstalk 애플리케이션 이름
          environment_name: Ddock-terview-app-env # EB 환경 이름 (콘솔에서 확인)
          region: ap-northeast-2 # AWS 리전
          
          # 배포될 버전의 이름 (GitHub 커밋 해시를 사용)
          version_label: ${{ github.sha }}
          
          # 배포할 파일 (.jar 파일의 경로)
          deployment_package: build/libs/ddock-terview-backend-0.0.1-SNAPSHOT.jar 